
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: pod-reader
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: pod-reader
subjects:
- kind: ServiceAccount
  name: default
  namespace: default

---
apiVersion: v1
kind: Pod
metadata:
  name: pod-status-printer
spec:
  containers:
  - name: watcher-container
    image: dwdraju/alpine-curl-jq
    command: ["/bin/sh", "-c", "while true; do echo 'Watcher container running...'; sleep 10; done"]

  - name: status-printer-container
    image: dwdraju/alpine-curl-jq
    command: ["/bin/sh", "-c", "while true; do curl -s --cacert /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
          --header 'Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)' \
          https://kubernetes.default.svc/api/v1/namespaces/$POD_NAMESPACE/pods/$POD_NAME | jq '.status.phase'; sleep 5; done"]
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          fieldPath: metadata.namespace
    volumeMounts:
    - name: kube-api-access
      mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      readOnly: true

  volumes:
  - name: kube-api-access
    emptyDir: {}
  automountServiceAccountToken: true
